/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 2>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };

        qrt {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <17 18>;
        };

        sqt {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <17 18 26>;
        };

        lessthan {
            bindings = <&kp LESS_THAN>;
            key-positions = <25 27>;
        };

        greater {
            bindings = <&kp GREATER_THAN>;
            key-positions = <25 28>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <3 4>;
        };

        tidle {
            bindings = <&kp TILDE>;
            key-positions = <5 6>;
        };

        xiahu {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 17>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <15 18>;
        };
    };

    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <250>;
            global-quick-tap;
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            global-quick-tap;
            quick-tap-ms = <200>;
        };
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };
        td_0: td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_0";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                        &kp W             &kp E                  &kp R           &kp T  &kp Y         &kp U  &kp I      &kp O      &kp P
&kp A                        &kp S             &kp D                  &kp F           &kp G  &kp H         &kp J  &kp K      &kp L      &kp BSPC
&ht LEFT_SHIFT Z             &kp X             &ht LEFT_ALT C         &ht LEFT_GUI V  &kp B  &kp N         &kp M  &kp COMMA  &kp SLASH  &ht RIGHT_SHIFT ENTER
                  &kp LCTRL         &kp SPACE                  &td_0                  &mo 1  &mo 2  &mo 3
            >;
        };

        lower_layer {
            bindings = <
&kp N1             &kp N2             &kp N3                 &kp N4   &kp N5   &kp N6            &kp N7     &kp N8     &kp N9    &kp N0
&kp A              &kp S              &kp LC(SPACE)          &kp F    &kp G    &kp SEMI          &kp MINUS  &kp EQUAL  &kp SQT   &kp BSPC
&kp LSHFT          &kp X              &kp ESC                &kp DEL  &kp TAB  &kp BSLH          &kp LBKT   &kp DOT    &kp RBKT  &kp RET
           &trans          &kp SPACE                 &trans           &trans   &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&kp F1                &kp F2                &kp F3                &kp F4      &kp F5    &kp F6               &kp F7             &kp F8           &kp F9          &kp F10
&kp CAPSLOCK          &trans                &trans                &trans      &kp F11   &kp END              &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp UP_ARROW    &kp RIGHT
&bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_CLR  &kp F12   &trans               &trans             &kp LEFT_ARROW   &kp DOWN_ARROW  &kp ENTER
              &trans                &trans                &trans              &kp C_PP  &trans   &kp C_MUTE
            >;
        };

        adjust_layer {
            bindings = <
&kp F1                &kp F2                &kp F3             &kp F4          &kp F5  &kp F6           &kp F7   &kp F8  &kp F9  &kp F10
&kp LEFT_GUI          &kp LEFT_ALT          &kp LCTRL          &kp LEFT_SHIFT  &trans  &kp F11          &kp F12  &trans  &trans  &trans
&trans                &trans                &trans             &trans          &trans  &trans           &trans   &trans  &trans  &trans
              &trans                &trans             &trans                  &trans  &trans   &trans
            >;
        };

        layer_4 {
            bindings = <
&bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL 4  &trans          &trans  &trans  &trans  &trans
&bt BT_CLR            &trans                &trans                &trans        &trans        &trans          &trans  &trans  &trans  &trans
&trans                &trans                &trans                &trans        &trans        &trans          &trans  &trans  &trans  &trans
              &trans                &trans                &trans                &trans        &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
        &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
        &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans          &trans          &trans          &trans  &trans  &trans          &trans  &trans  &trans  &trans
        &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };
    };
};
